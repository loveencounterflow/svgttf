{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/options.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,GAAA,EAAA,EAAA,EAAA,IAAA,EAAA,QAAA,EAAA,OAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC,GAAG,CAAC,IAAR,CAAa,GAAb;;EAC5B,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA0B,KAA1B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA0B,KAA1B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA0B,KAA1B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA0B,KAA1B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd,EAd5B;;;EAgBA,EAAA,GAA4B,OAAA,CAAQ,IAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR,EAjB5B;;;EAmBA,IAAC,CAAA,KAAD,GAA4B,OAAA,CAAQ,SAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,QAHF,EAIE,OAJF,EAKE,OALF,EAME,OANF,CAAA,GAM4B,IAAC,CAAA,KAN7B,EApBA;;;EA4BA,GAAA,GAA4B,OAAA,CAAQ,gBAAR;;EAC5B,IAAA,GAA4B,OAAA,CAAQ,MAAR,EA7B5B;;;;;EAmCA,OAAA,GAAY;;EACZ,QAAA,GAAY;;EAEZ,MAAM,CAAC,OAAP,GAAiB,OAAA,GAEf,CAAA;;IAAA,MAAA,EAAkB,CAAE,OAAA,GAAU,CAAZ,EAAe,OAAA,GAAU,CAAzB,CAAlB;;IAEA,UAAA,EAAkB,CAAE,CAAF,EAAK,OAAA,GAAU,KAAf,CAFlB;;IAIA,MAAA,EAAkB,OAJlB;;IAMA,YAAA,EAAkB,CANlB;;IAQA,UAAA,EAAkB,EARlB;IASA,OAAA,EAAkB,QATlB;IAUA,MAAA,EAAkB,CAAC,GAAD,GAAO,QAVzB;IAWA,OAAA,EAAkB,CAAC,GAAD,GAAO,QAXzB;IAYA,KAAA,EAAkB,QAAA,GAAW;EAZ7B;AAxCF",
  "sourcesContent": [
    "\n'use strict'\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr.bind CND\nbadge                     = 'SVGTTF/OPTIONS'\nlog                       = CND.get_logger 'plain',   badge\ninfo                      = CND.get_logger 'info',    badge\nalert                     = CND.get_logger 'alert',   badge\ndebug                     = CND.get_logger 'debug',   badge\nwarn                      = CND.get_logger 'warn',    badge\nurge                      = CND.get_logger 'urge',    badge\nwhisper                   = CND.get_logger 'whisper', badge\nhelp                      = CND.get_logger 'help',    badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\nFS                        = require 'fs'\nPATH                      = require 'path'\n#...........................................................................................................\n@types                    = require './types'\n{ isa\n  validate\n  declare\n  first_of\n  last_of\n  size_of\n  type_of }               = @types\n#...........................................................................................................\nCHR                       = require 'coffeenode-chr'\nglob                      = require 'glob'\n\n\n#===========================================================================================================\n# OPTIONS\n#-----------------------------------------------------------------------------------------------------------\n_module   = 36\n_em_size  = 4096\n\nmodule.exports = options =\n  ### Coordinates of first glyph outline: ###\n  offset:           [ _module * 4, _module * 4, ]\n  ### Ad hoc correction: ###\n  correction:       [ 0, _module * 0.075, ]\n  ### Size of grid and font design size: ###\n  module:           _module\n  ### Number of glyph rows between two rulers plus one: ###\n  block_height:     9\n  ### CID of first glyph outline: ###\n  row_length:       16\n  em_size:          _em_size\n  ascent:           +0.8 * _em_size\n  descent:          -0.2 * _em_size\n  scale:            _em_size / _module\n\n\n\n"
  ]
}