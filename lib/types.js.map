{
  "version": 3,
  "file": "",
  "sourceRoot": "",
  "sources": [
    "../src/types.coffee"
  ],
  "names": [],
  "mappings": "AACA;EAAA;AAAA,MAAA,GAAA,EAAA,SAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,IAAA,EAAA,IAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,EAAA,IAAA,EAAA,IAAA,EAAA,OAAA;;;EAIA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,EAAA,GAA4B,IAAI,CAAC;;EACjC,SAAA,GAA4B,CAAE,OAAA,CAAQ,WAAR,CAAF,CAAuB,CAAC;;EACpD,SAAA,GAA4B,IAAI,SAAJ,CAAc,MAAM,CAAC,OAArB,EAhB5B;;;;;EAoBA,IAAC,CAAA,OAAD,CAAS,aAAT,EAAwB;IAAA,KAAA,EACtB;MAAA,eAAA,EAA4C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAA5C;MACA,2BAAA,EAA4C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAC,CAAC,IAArB;MAAT,CAD5C;MAEA,yBAAA,EAA4C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAC,CAAC,QAAd;MAAT;IAF5C;EADsB,CAAxB,EApBA;;;EA0BA,IAAC,CAAA,OAAD,CAAS,yBAAT,EAAoC;IAAA,KAAA,EAClC;MAAA,aAAA,EAA8C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,IAAL,CAAU,CAAV;MAAT,CAA9C;MACA,gCAAA,EAA8C,QAAA,CAAE,CAAF,CAAA;AAAQ,YAAA;eAAC,CAAA,CAAA,WAAK,CAAC,CAAC,OAAP,OAAA,IAAiB,CAAjB;MAAT,CAD9C;MAEA,uCAAA,EAA8C,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,yBAAL,CAA+B,CAAC,CAAE,CAAF,CAAhC;MAAT,CAF9C;MAGA,2CAAA,EAA8C,QAAA,CAAE,CAAF,CAAA;QAC5C,IAAiD,CAAC,CAAC,MAAF,KAAY,CAA7D;AAAA,iBAAO,IAAC,CAAA,GAAG,CAAC,0BAAL,CAAgC,CAAC,CAAE,CAAF,CAAjC,EAAP;;AACA,eAAO,IAAC,CAAA,GAAG,CAAC,0BAAL,CAAgC,CAAC,SAAjC;MAFqC;IAH9C;EADkC,CAApC,EA1BA;;;EAmCA,IAAC,CAAA,OAAD,CAAS,2BAAT,EAAsC,QAAA,CAAE,CAAF,CAAA;WACpC,MAAO,YAAP,MAAiB,YAAjB,MAA2B,WAA3B,MAAoC,WAApC,MAA6C,WAA7C,MAAsD;EADlB,CAAtC,EAnCA;;;EAuCA,IAAC,CAAA,OAAD,CAAS,0BAAT,EAAqC,QAAA,CAAE,CAAF,CAAA;WACnC,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,+BAAb,EAA8C,CAA9C;EADmC,CAArC,EAvCA;;;EA2CA,IAAC,CAAA,OAAD,CAAS,+BAAT,EAA0C;IAAA,KAAA,EACxC;MAAA,gBAAA,EAAoC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,MAAL,CAAY,CAAZ;MAAT,CAApC;MACA,8BAAA,EAAoC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,gBAAL,CAAsB,CAAC,CAAC,IAAxB;MAAT,CADpC;MAEA,kBAAA,EAAoC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAW,CAAC,CAAC,GAAb;MAAT,CAFpC;MAGA,wBAAA,EAAoC,QAAA,CAAE,CAAF,CAAA;eAAS,IAAC,CAAA,GAAG,CAAC,KAAL,CAAW,CAAC,CAAC,SAAb;MAAT;IAHpC;EADwC,CAA1C,EA3CA;;;EAkDA,IAAC,CAAA,OAAD,CAAS,4BAAT,EAAuC,QAAA,CAAE,CAAF,CAAA;WACrC,CAAE,IAAC,CAAA,GAAG,CAAC,aAAL,CAAmB,CAAnB,CAAF,CAAA,IAA4B,CAAE,IAAC,CAAA,GAAG,CAAC,KAAL,CAAW,CAAX,CAAF,CAA5B,IAAgD,CAAE,CAAE,IAAC,CAAA,GAAG,CAAC,OAAL,CAAa,OAAb,EAAsB,CAAtB,CAAF,CAAA,IAAgC,CAAC,CAAC,MAAF,GAAW,CAA7C;EADX,CAAvC;AAlDA",
  "sourcesContent": [
    "\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'INTERTEXT/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n# L                         = @\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'svgttf_font', tests:\n  \"x is a object\":                            ( x ) -> @isa.object x\n  \"x.path is a nonempty_text\":                ( x ) -> @isa.nonempty_text x.path\n  \"x.otjsfont is an object\":                  ( x ) -> @isa.object x.otjsfont\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'svgttf_svg_transform_fn', tests:\n  \"x is a list\":                                ( x ) -> @isa.list x\n  \"x has between 2 and 6 elements\":             ( x ) -> 2 <= x.length <= 6\n  \"x[ 0 ] is a svgttf_svg_transform_name\":      ( x ) -> @isa.svgttf_svg_transform_name x[ 0 ]\n  \"tail of x is a svgttf_svg_transform_value\":  ( x ) ->\n    return @isa.svgttf_svg_transform_value x[ 1 ] if x.length is 2\n    return @isa.svgttf_svg_transform_value x[ 1 .. ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'svgttf_svg_transform_name', ( x ) ->\n  x in [ 'matrix', 'rotate', 'scale', 'skewX', 'skewY', 'translate', ]\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'svgttf_harfbuzz_linotype', ( x ) ->\n  @isa.list_of 'svgttf_harfbuzz_linotype_sort', x\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'svgttf_harfbuzz_linotype_sort', tests:\n  \"x is an object\":                   ( x ) -> @isa.object x\n  \"x.upem is a positive_integer\":     ( x ) -> @isa.positive_integer x.upem\n  \"x.gid is a count\":                 ( x ) -> @isa.count x.gid\n  \"x.x_advance is a float\":           ( x ) -> @isa.float x.x_advance\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'svgttf_svg_transform_value', ( x ) ->\n  ( @isa.nonempty_text x ) or ( @isa.float x ) or ( ( @isa.list_of 'float', x ) and x.length > 0 )\n\n\n\n\n"
  ]
}